{"version":3,"sources":["../../src/controllers/report.controller.js"],"names":["ReportController","Report","query","req","res","ReportModel","find","reports","send","status","error","get","id","params","findOne","_id","report","message","data","newReport","projectName","url","footer","helpers","header","page","console","log","create","dir","path","resolve","Util","readFile","body","reportSaved","update","findByIdAndUpdate","new","generate","reportId","generatePdf","pdfData","writeHead","length","end","destroy","findByIdAndRemove"],"mappings":"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","file":"report.controller.js","sourcesContent":["import path from 'path';\n\nimport ReportModel from './../models/report.model'\n\nimport UtilReport from './../util/report.util'\n\nconst ReportController = () => {\n\n    const Report = {\n        query: async (req, res) => {\n            try {\n\n                const reports = await ReportModel.find()\n\n                return res.send({ reports })\n\n            } catch (err) {\n                return res.status(400).send({ error: 'Erro ao buscar lista de reports' })\n            }\n\n        },\n        get: async (req, res) => {\n\n            const id = req.params.id\n\n            try {\n                const report = await ReportModel.findOne({\n                    _id: id\n                })\n\n                if (!report)\n                    return res.status(400).send({ message: 'Esse projeto n達o existe na base de dados', data: report })\n\n                const newReport = {\n                    id: report.id,\n                    projectName: report.projectName,\n                    url: report.url,\n                    data: report.data,\n                    footer: report.footer,\n                    helpers: report.helpers,\n                    header: report.header,\n                    page: report.page\n                }\n\n                return res.send(newReport)\n\n            } catch (err) {\n                console.log(err)\n                return res.status(400).send({ error: 'Erro ao buscar report' })\n            }\n\n        },\n        create: async (req, res) => {\n            try {\n\n                const dir = path.resolve(\"./src/reports/default\")\n\n                const Util = UtilReport()\n\n                const { data, footer, header, helpers, page } = await Util.readFile(dir)\n\n                const report = { ...req.body, data, footer, header, helpers, page }\n\n                const reportSaved = await ReportModel.create(report)\n\n                return res.send(reportSaved)\n\n            } catch (err) {\n                console.log(err)\n                return res.status(400).send({ error: 'Erro ao criar report' })\n            }\n        },\n        update: async (req, res) => {\n\n            const id = req.params.id\n\n            try {\n\n                const report = await ReportModel.findOne({ _id: id })\n\n                if (!report)\n                    return res.status(400).send({ error: 'Esse projeto n達o existe na base de dados' })\n\n                const newReport = await ReportModel.findByIdAndUpdate(id, req.body, { new: true })\n\n                return res.send(newReport)\n\n            } catch (err) {\n\n                return res.status(400).send({ error: 'Ocorreu algum erro ao atualizar o projeto' })\n            }\n\n        },\n        generate: async (req, res) => {\n\n            const id = req.body.reportId\n\n            try {\n\n                const report = await ReportModel.findOne({ _id: id })\n\n                if (!report)\n                    return res.status(400).send({ error: 'Esse projeto n達o existe na base de dados' })\n\n                const Util = UtilReport()\n\n                const pdfData = await Util.generatePdf(report)\n\n                res.writeHead(200, {\n                    'Content-Type': 'application/pdf',\n                    'Content-Disposition': 'attachment; filename=Laudos.pdf',\n                    'Content-Length': pdfData.length\n                });\n\n                return res.end(pdfData)\n\n            } catch (err) {\n\n                return res.status(400).send({ error: 'Erro ao renderizar PDF' })\n            }\n        },\n        destroy: async (req, res) => {\n\n            const id = req.params.id\n\n            try {\n\n                const report = await ReportModel.findByIdAndRemove({ _id: id })\n\n                if (!report)\n                    return res.status(400).send({ error: 'Esse projeto n達o existe na base de dados' })\n\n                return res.send({ message: 'Projeto deletado com sucesso' })\n\n            } catch (err) {\n\n                return res.status(400).send({ error: 'Ocorreu algum erro ao deletar esse projeto' })\n            }\n\n        },\n\n    }\n\n    return Report\n}\n\nexport default ReportController"]}