{"version":3,"sources":["../../src/util/report.util.js"],"names":["UtilReport","Report","readFile","dir","fs","data","footer","header","helpers","page","bodyPdf","toString","writeFile","existsSync","mkdirSync","generatePdf","jsreport","render","template","content","engine","recipe","phantom","format","width","margin","numberOfWorkers","timeout","allowLocalFilesAccess","headerHeight","footerHeight","pdf","pdfData"],"mappings":"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","file":"report.util.js","sourcesContent":["import fs from 'fs'\nimport promisify from 'promisify-node'\nimport jsreport from '../modules/jsreport.module'\n\nconst UtilReport = () => {\n    const Report = {\n        readFile: async (dir) => {\n\n            const readFile = promisify(fs.readFile)\n\n            const data = await readFile(dir + '/data.json')\n            const footer = await readFile(dir + '/footer.html')\n            const header = await readFile(dir + '/header.html')\n            const helpers = await readFile(dir + '/helpers.js')\n            const page = await readFile(dir + '/page.html')\n\n            const bodyPdf = {\n                data: data.toString(),\n                footer: footer.toString(),\n                header: header.toString(),\n                helpers: helpers.toString(),\n                page: page.toString()\n            }\n\n            return bodyPdf\n        },\n        writeFile: async (dir, bodyPdf) => {\n\n            if (!fs.existsSync(dir)) {\n                fs.mkdirSync(dir);\n            }\n\n            const writeFile = promisify(fs.writeFile)\n\n            const {\n                data,\n                footer,\n                header,\n                helpers,\n                page\n            } = bodyPdf\n\n            await writeFile(dir + \"/helpers.js\", helpers)\n            await writeFile(dir + \"/data.json\", data)\n            await writeFile(dir + \"/page.html\", page)\n            await writeFile(dir + \"/header.html\", header)\n            await writeFile(dir + \"/footer.html\", footer)\n\n            return true\n        },\n        generatePdf: async (bodyPdf) => {\n\n            const { data, footer, header, helpers, page } = bodyPdf\n\n            const pdf = await jsreport.render({\n                template: {\n                    content: page,\n                    helpers: helpers,\n                    engine: 'handlebars',\n                    recipe: 'phantom-pdf',\n                    phantom: {\n                        format: \"A4\",\n                        width: \"700px\",\n                        margin: \"1cm\",\n                        numberOfWorkers: 1,\n                        timeout: 180000,\n                        allowLocalFilesAccess: false,\n                        header: header,\n                        headerHeight: \"3cm\",\n                        footer: footer.toString(),\n                        footerHeight: \"1cm\"\n                    }\n\n                },\n                data: data\n            });\n\n            const pdfData = pdf.content\n\n            return pdfData\n        }\n    }\n\n    return Report\n}\nexport default UtilReport"]}